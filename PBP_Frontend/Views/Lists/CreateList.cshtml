@model PBP_Frontend.ViewModels.ListViewModel

@{
    ViewBag.Title = "CreateList";
    Layout = "~/Views/Shared/_InternalLayout.cshtml";
}

<h2 class="internal-page-title">Criar Lista</h2>
<h5 class="internal-page-subtitle">Crie sua lista de produtos</h5>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row d-flex justify-content-around">
        <div class="form-group col-md-6">
            <div>
                <label class="control-label col-md-2" for="ListName">Nome</label>
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => Model.ListName, new { htmlAttributes = new { @class = "form-control", minlength = "1", maxlength = "50" } })
                    @Html.ValidationMessageFor(model => model.ListName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-6">
            <div>
                <label class="control-label col-md-2" for="ListRequester">Solicitante</label>
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => Model.ListRequester, new { htmlAttributes = new { @class = "form-control", minlength = "1", maxlength = "50" } })
                    @Html.ValidationMessageFor(model => model.ListRequester, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductsChosen.FirstOrDefault().ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductsChosen.FirstOrDefault().RequiredQuantity)
                </th>
            </tr>
        </thead>
        @if (Model?.ProductsChosen?.Count > 0)
        {
            for (int i = 0; i < Model.ProductsChosen.Count; i++)
            {
                <tr>
                    <td class="font-weight-bold">
                        @Html.DisplayName(String.Format("{0}", i + 1))
                        @Html.HiddenFor(modelItem => Model.ProductsChosen[i].ProductId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ProductsChosen[i].ProductName)
                        @Html.HiddenFor(modelItem => Model.ProductsChosen[i].ProductName)
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => Model.ProductsChosen[i].RequiredQuantity, new { htmlAttributes = new { @class = "form-control table-input" } })
                    </td>
                </tr>
                <tr class="validate-message-row">
                    <td colspan="4" class="text-center validate-message-cell">
                        @Html.ValidationMessageFor(model => model.ProductsChosen[i].RequiredQuantity, "", new { @class = "text-danger" })
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center">
                    Nenhum item encontrado
                </td>
            </tr>
        }

    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 div-btn-right-aligned">
            <input type="submit" value="Concluir" class="btn btn-success" />
        </div>
    </div>
}
@section styles
{
    <link href="~/Content/CreateList/CreateList.css" rel="stylesheet" />
}